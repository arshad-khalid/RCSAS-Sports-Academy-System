/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.rcsas;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Arshad Khalid (TP058473)
 */
public class SortAndDisplayCoachName extends javax.swing.JFrame {

    /**
     * Creates new form SortAndDisplayCoachName
     */
    public SortAndDisplayCoachName() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CoachAscendingOrderTextArea = new javax.swing.JTextArea();
        SearchButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 51, 0));
        jLabel3.setText("List of coach names by ascending order");
        jLabel3.setToolTipText("");

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        CoachAscendingOrderTextArea.setEditable(false);
        CoachAscendingOrderTextArea.setColumns(20);
        CoachAscendingOrderTextArea.setRows(5);
        jScrollPane1.setViewportView(CoachAscendingOrderTextArea);

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClearButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(SearchButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SearchButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton)
                    .addComponent(ClearButton))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        SortAndDisplay sad=new SortAndDisplay();
        sad.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // TODO add your handling code here:
        //clear the text area
        CoachAscendingOrderTextArea.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        //initializing the variables
        String fname="";
        String lname="";
        String ICno="";
        String DOB="";
        String Pnumber="";
        String address ="";
        String sport="";
        String pay=""; 
        String coachID="";
        try {
            //creating array to store data of files
            ArrayList<String> str = new ArrayList<>();
            File f=new File("coachRecords.txt");
            File file=new File("coachNames.txt");
            
            Scanner s=new Scanner(f);
            while (s.hasNext()) {
                coachID=s.nextLine();
                fname=s.nextLine();
                lname=s.nextLine();
                str.add(fname);
                ICno=s.nextLine();
                DOB=s.nextLine();
                Pnumber=s.nextLine();
                address =s.nextLine();
                sport=s.nextLine();
                pay=s.nextLine();
            
           
                Collections.sort(str);
                try (PrintWriter writer= new PrintWriter(new BufferedWriter(new FileWriter("coachNames.txt", false)))){
                
                    for(String x: str){
                        writer.write(x);
                        writer.write("\n");
                    }
                    writer.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                Scanner t=new Scanner(file);
                try{
                    while (t.hasNext()) { 
                        String names=t.nextLine();
                        if (fname.contains(names)) {
                            
                            //printing the data in the text area
                            CoachAscendingOrderTextArea.append("Coach name:\t"+fname.toUpperCase()+" "+lname.toUpperCase()+ "\n");
                            CoachAscendingOrderTextArea.append("Coach ID no:\t"+ coachID+ "\n");
                            CoachAscendingOrderTextArea.append("IC no:\t"+ ICno+ "\n");
                            CoachAscendingOrderTextArea.append("Date of birth:\t"+DOB+"\n");
                            CoachAscendingOrderTextArea.append("Phone number:\t"+Pnumber+"\n");
                            CoachAscendingOrderTextArea.append("Address:\t"+address.toUpperCase()+"\n");
                            CoachAscendingOrderTextArea.append("Specialized\nSport:\t"+sport.toUpperCase()+"\n");
                            CoachAscendingOrderTextArea.append("Hour pay:\t"+pay+"\n\n");
                        } 
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this,"Could not obtain record","Error message", JOptionPane.ERROR_MESSAGE);
                }  
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(SearchButton, "Records not found!");
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortAndDisplayCoachName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortAndDisplayCoachName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortAndDisplayCoachName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortAndDisplayCoachName.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortAndDisplayCoachName().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JTextArea CoachAscendingOrderTextArea;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
